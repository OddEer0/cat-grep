main.c:
main.c:int main(int argc, const char* argv[]) {
main.c:	t_grep_parse grepData;
main.c:	t_grep_error grepError = grepParser(argc, argv, &grepData);
main.c:	if (grepError.code) {
main.c:		grepParserErrorHandler(&grepError);
main.c:		return 0;
main.c:	}
main.c:
main.c:	grep(&grepData);
main.c:	
main.c:	// for (int i = 0; i < grepData.files->length; i++) {
main.c:	// 	printf("files: %s\n", grepData.files->values[i]);
main.c:	// }
main.c:	// printf("length: %d\n", grepData.files->length);
main.c:	
main.c:	freeGrepParse(&grepData);
main.c:	return 0;
main.c:}
main.c:
Makefile:CC=gcc
Makefile:CFLAGS=-Wall -Werror -Wextra
Makefile:RESULT=grep
Makefile:LIB=../lib
Makefile:FILES=main.c grep.c $(LIB)/string.c $(LIB)/option.c parser/shared.c parser/template/parser.c parser/file/parser.c parser/option/parser.c parser/index.c
Makefile:
Makefile:all: rebuild
Makefile:
Makefile:
Makefile:ez:
Makefile:	$(CC) $(FILES) -o $(RESULT)
Makefile:
Makefile:grep:
Makefile:	$(CC) $(CFLAGS) $(FILES) -o $(RESULT)
Makefile:
Makefile:format:
Makefile:	clang-format -i *.h
Makefile:	clang-format -i *.c
Makefile:
Makefile:
Makefile:check:
Makefile:	clang-format -n *.h
Makefile:	clang-format -n *.c
Makefile:
Makefile:	rm -rf grep
Makefile:
Makefile:	cp parser/template/template.txt template.txt
Makefile:	cp parser/template/template2.txt template2.txt
Makefile:	rm template.txt
Makefile:	rm template2.txt
Makefile:
Makefile:
Makefile:
